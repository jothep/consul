# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
 config.vm.box = "ubuntu/trusty64"
 config.ssh.username = "vagrant"
 config.ssh.password = "vagrant"

 config.vm.define "node1" do |node1|
  node1.vm.hostname = "node1"
  node1.vm.network "private_network", ip: "192.168.15.11"
  node1.vm.network "forwarded_port", guest: 8500, host: 8510, protocol: "tcp"
  node1.vm.network "forwarded_port", guest: 8600, host: 8610, protocol: "udp"
 # node1.vm.network "public_network", ip: "192.168.1.71", bridge: "en0: Wi-Fi (AirPort)"
 # node1.vm.synced_folder "/Users/zhuxiang/vagrant/data", "/vagrant_data"
  node1.vm.provider "virtualbox" do |v|
  v.name = "node1"
  v.cpus = "1"
  v.memory = "1024"
  end
 end

 config.vm.define "node2" do |node2|
  node2.vm.hostname = "node2"
  node2.vm.network "private_network", ip: "192.168.15.12"
  node2.vm.network "forwarded_port", guest: 8500, host: 8520,  protocol: "tcp"
  node2.vm.network "forwarded_port", guest: 8600, host: 8620,  protocol: "udp"
  # node2.vm.network "public_network", ip: "192.168.1.72", bridge: "en0: Wi-Fi (AirPort)"
  # node2.vm.synced_folder "/Users/zhuxiang/vagrant/data", "/vagrant_data"
  node2.vm.provider "virtualbox" do |v|
  v.name = "node2"
  v.cpus = "1"
  v.memory = "1024"
  end
 end

 config.vm.define "node3" do |node3|
  node3.vm.hostname = "node3"
  node3.vm.network "private_network", ip: "192.168.15.13"
  node3.vm.network "forwarded_port", guest: 8500, host: 8530,  protocol: "tcp"
  node3.vm.network "forwarded_port", guest: 8600, host: 8630,  protocol: "udp"
  node3.vm.network "forwarded_port", guest: 8081, host: 8381,  protocol: "tcp"
  node3.vm.network "forwarded_port", guest: 8082, host: 8382,  protocol: "tcp"
  node3.vm.provider "virtualbox" do |v|
  v.name = "node3"
  v.cpus = "1"
  v.memory = "1024"
  end
 end

 config.vm.define "node4" do |node4|
  node4.vm.hostname = "node4"
  node4.vm.network "private_network", ip: "192.168.15.14"
  node4.vm.network "forwarded_port", guest: 8500, host: 8540,  protocol: "tcp"
  node4.vm.network "forwarded_port", guest: 8600, host: 8640,  protocol: "udp"
  node4.vm.provider "virtualbox" do |v|
  v.name = "node4"
  v.cpus = "1"
  v.memory = "1024"
  end
 end

 config.vm.define "node5" do |node5|
  node5.vm.hostname = "node5"
  node5.vm.network "private_network", ip: "192.168.15.15"
  node5.vm.network "forwarded_port", guest: 8500, host: 8550,  protocol: "tcp"
  node5.vm.network "forwarded_port", guest: 8600, host: 8650,  protocol: "udp"
  node5.vm.provider "virtualbox" do |v|
  v.name = "node5"
  v.cpus = "1"
  v.memory = "1024"
  end
 end
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  #config.vm.box = "base"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
end
